<div class="form-row mt-2 po-request-form">
  <%= f.hidden_field :id %>
  <%= f.hidden_field :sales_order_id %>
  <%= f.hidden_field :inquiry_id %>
  <%= f.hidden_field :supplier_id if !stock %>

  <% if stock %>
    <div class="col-12 ">
      <%= f.association :supplier, label_method: :to_s, include_blank: "Type Supplier", input_html: {class: 'select2-ajax select2-wrap-text', :'data-source' => autocomplete_overseers_suppliers_path, :'data-parsley-errors-messages-disabled' => '', :'data-parsely-no-valid-feedback' => ''}, label: "Supplier" %>
    </div>
  <% end %>
  <div class="col-12 col-md-4">
    <%= f.input :supplier_po_type, as: :select, collection: enum_to_collection(PoRequest.supplier_po_types, keep_raw: true, alphabetical: false), :include_blank => true, label: 'Supplier PO Type', required: true %>
  </div>

  <% if f.object.persisted? %>
    <% if stock %>
      <div class="col-12 col-md-4">
        <% if is_authorized(@po_request, 'can_cancel') && policy(@po_request).can_cancel? %>
          <%= f.input :stock_status, as: :select, collection: enum_to_collection(PoRequest.stock_statuses.except('Stock Requested', 'Stock Rejected'), alphabetical: false, keep_raw: true), :include_blank => false %>
        <% elsif is_authorized(@po_request, 'can_reject_stock_po') %>
          <%= f.input :stock_status, as: :select, collection: enum_to_collection(PoRequest.stock_statuses.except('Stock Supplier PO Created'), alphabetical: false, keep_raw: true), :include_blank => false %>
        <% elsif is_authorized(@po_request, 'can_update_rejected_po_requests') && policy(@po_request).can_update_rejected_po_requests? %>
          <%= f.input :stock_status, as: :select, collection: enum_to_collection(PoRequest.stock_statuses.except('Stock Supplier PO Created'), alphabetical: false, keep_raw: true), :include_blank => false, :disabled => ['Stock Rejected'] %>
        <% else %>
          <%= f.input :stock_status, as: :select, collection: enum_to_collection(PoRequest.stock_statuses, alphabetical: false), disabled: true, :include_blank => false %>
        <% end %>
      </div>
    <% else %>
      <%= render 'overseers/po_requests/po_request_statuses', f: f %>
    <% end %>
    <div class="col-4 d-none status-rejected">
      <%= f.input :rejection_reason, as: :select, :wrapper => :custom_multi_select, collection: enum_to_collection(PoRequest.rejection_reasons, alphabetical: false, keep_raw: true), disabled: (stock ? !is_authorized(f.object, 'can_reject_stock_po') : !is_authorized(f.object, 'can_reject') && policy(f.object).can_reject?), :include_blank => true %>
    </div>
    <div class="col-4 d-none other-rejection-reason">
      <%= f.input :other_rejection_reason, :include_blank => true %>
    </div>
    <div class="col-4 d-none status-cancelled">
      <%= f.input :cancellation_reason, :include_blank => true %>
    </div>
  <% else %>
    <% if stock %>
      <div class="col-12 col-md-4">
        <%= f.input :stock_status, as: :select, collection: enum_to_collection(PoRequest.stock_statuses.except('Stock Rejected', 'Stock Supplier PO Created'), alphabetical: false), :include_blank => false %>
      </div>
    <% else %>
      <div class="col-12 col-md-4">
        <%= f.input :status, as: :select, collection: enum_to_collection(PoRequest.statuses.except('Supplier PO: Created Not Sent', 'Supplier PO Sent', 'Cancelled', 'Rejected', 'Supplier PO: Amendment Pending', 'Supplier PO: Amended'), alphabetical: false, keep_raw: true), :include_blank => false %>
      </div>
    <% end %>
  <% end %>

  <% if f.object.persisted? %>

    <div class="col-4">
      <%= f.association :purchase_order, collection: [f.object.purchase_order], label_method: :to_s, include_blank: 'Type Supplier PO Number', input_html: {class: 'select2-ajax select2-wrap-text', :'data-source' => autocomplete_overseers_purchase_orders_path(:inquiry_number => f.object.inquiry.inquiry_number, :has_po_request => true), :'data-parsley-errors-messages-disabled' => '', :'data-parsely-no-valid-feedback' => ''}, label: 'Supplier PO Number' %>
    </div>
  <% end %>
  <% if stock %>
    <div class="col-12 col-md-4">
      <%= f.association :contact, collection: selected_option_or_nil(f, :contact), input_html: {class: 'select2-ajax', :'data-source' => autocomplete_overseers_contacts_path}, label_method: :to_s %>
    </div>
  <% else %>
    <div class="col-12 col-md-4">
      <%= f.association :contact, collection: (f.object.supplier.contacts.map {|contact| [contact.to_s, contact.id, {'data-contact-email' => contact.email || nil, 'data-contact-phone' => contact.phone || nil, 'data-contact-mobile' => contact.mobile || nil}]} if f.object.supplier) || [], input_html: {class: 'select2-single'}, required: true, hint: 'Note: If left blank, above selected contact\'s email will be applied' %>

    </div>
  <% end %>
  <div class="col-12 col-md-3">
    <%= f.input :contact_email, label: 'Contact Email', placeholder: 'Contact email', required: !stock %>
  </div>
  <div class="col-12 col-md-4">
    <%= f.input :contact_phone, label: 'Contact Phone', placeholder: 'Contact phone', required: !stock %>
  </div>

  <!--  <div class="col-12 col-md-4">-->
  <%#= f.input :supplier_committed_date, label: 'Supplier Committed Delivery Date', as: :string, input_html: {:'data-toggle' => 'datepicker', :class => 'supplier-committed-date'}, required: true %>
  <!--  </div>-->

  <div class="col-12 col-md-4">
    <%= f.association :payment_option, :wrapper => :custom_multi_select, include_blank: 'Select Payment Terms', required: true, label: 'Payment Terms:', collection: PaymentOption.active.pluck(:name, :id) %>
  </div>
  <div class="col-12 col-md-4">
    <%= f.input :delivery_type, as: :select, collection: enum_to_collection(PoRequest.delivery_types, alphabetical: false, keep_raw: true), required: true %>
  </div>
  <div class="col-12 col-md-4">
    <%= f.input :transport_mode, as: :select, collection: enum_to_collection(PoRequest.transport_modes, alphabetical: false, keep_raw: true), required: true %>
  </div>
  <div class="col-12 col-md-4 d-none late_lead_date_reason">
    <%= f.input :late_lead_date_reason, placeholder: 'Reason for late lead date', label: 'Late Lead Date Reason:' %>
  </div>

  <div class="col-12 ">
    <div class="form-row">
      <% if stock %>
        <div class="col-12 col-md-6">
          <%= f.association :bill_from, collection: selected_option_or_nil(f, :bill_from), label_method: :to_s, input_html: {class: 'select2-ajax', :'data-source' => autocomplete_overseers_company_addresses_path(f.object.supplier || f.object.inquiry.company)}, required: true %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :ship_from, collection: selected_option_or_nil(f, :ship_from), label_method: :to_s, input_html: {class: 'select2-ajax', :'data-source' => autocomplete_overseers_company_addresses_path(f.object.supplier || f.object.inquiry.company)}, required: true %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :bill_to, collection: Warehouse.where('is_active = ? AND series_code IS NOT ?', true, nil).with_includes.map {|warehouse| [warehouse.to_s, warehouse.id, {'data-warehouse' => warehouse.address.city_name.try(:strip) || 'N/A', 'data-warehouse-state' => warehouse.address.state.id, 'data-warehouse-city' => warehouse.address.city_name}]}, input_html: {class: 'select2-single', 'data-warehouse-list': Warehouse.all.map {|warehouse| [warehouse.address.state.id]}.uniq}, required: true %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :ship_to, collection: Warehouse.all.with_includes.map {|warehouse| [warehouse.to_s, warehouse.id, {'data-warehouse' => warehouse.address.city_name.try(:strip) || 'N/A', 'data-warehouse-state' => warehouse.address.state.id, 'data-warehouse-city' => warehouse.address.city_name}]}, input_html: {class: 'select2-single', 'data-warehouse-list': Warehouse.all.map {|warehouse| [warehouse.address.state.id]}.uniq}, required: true %>
        </div>
      <% else %>
        <div class="col-12 col-md-6">
          <%= f.association :bill_from, collection: Address.with_includes.where(:company => f.object.supplier).map {|supplier_address| [supplier_address.to_s, supplier_address.id, {'data-supplier-state' => supplier_address.state.try(:id) || '', 'data-city-name' => supplier_address.city_name}]}, input_html: {class: 'select2-single'}, required: true %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :ship_from, collection: Address.with_includes.where(:company => f.object.supplier).map {|supplier_address| [supplier_address.to_s, supplier_address.id, {'data-supplier-state' => supplier_address.state.try(:id) || '', 'data-city-name' => supplier_address.city_name}]}, input_html: {class: 'select2-single'}, required: true %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :bill_to, collection: Warehouse.all.with_includes.map {|warehouse| [warehouse.to_s, warehouse.id, {'data-warehouse' => warehouse.address.city_name.try(:strip) || 'N/A', 'data-warehouse-state' => warehouse.address.state.id, 'data-warehouse-city' => warehouse.address.city_name}]}, input_html: {class: 'select2-single', 'data-warehouse-list': Warehouse.all.map {|warehouse| [warehouse.address.state.id]}.uniq, 'data-parsley-regular': 'regular', 'data-parsley-locations': [f.object.inquiry.bill_from.address.city_name, f.object.inquiry.shipping_address.city_name, f.object.inquiry.bill_from.address.state.id].join(',')}, required: true, hint: 'Note: If the Supplier is from a location where Bulk MRO has no office eg. Coimbatore, then the \'Bill To/\' for the supplier PO will be the Bulk MRO office from which the Sales Order has been created eg. Mumbai, Ahmedabad, Delhi, etc.' %>
        </div>
        <div class="col-12 col-md-6">
          <%= f.association :ship_to, collection: Warehouse.all.with_includes.map {|warehouse| [warehouse.to_s, warehouse.id, {'data-warehouse' => warehouse.address.city_name.try(:strip) || 'N/A', 'data-warehouse-state' => warehouse.address.state.id, 'data-warehouse-city' => warehouse.address.city_name}]}, input_html: {class: 'select2-single', 'data-warehouse-list': Warehouse.all.map {|warehouse| [warehouse.address.state.id]}.uniq, 'data-parsley-regular': 'regular', 'data-parsley-locations': [f.object.inquiry.bill_from.address.city_name, f.object.inquiry.shipping_address.city_name, f.object.inquiry.bill_from.address.state.id].join(',')}, required: true, hint: 'Note: If the Supplier is from a location where Bulk MRO has no office eg. Coimbatore, then the \'Bill To\' for the supplier PO will be the Bulk MRO office from which the Sales Order has been created eg. Mumbai, Ahmedabad, Delhi, etc.' %>
        </div>
      <% end %>
      <div id="warehouse-div" data-warehouse-id=""></div>
      <div id="product_inventory_div"></div>
      <div class="col-md-12 mb-2 d-none">
        <div class="card card-default">
          <div class="card-body">
            <strong>Depending Supplier PO Type:</strong>
            <ul>
              <li>DropShip and Route through
                <ul>
                  <li>If the Sales Order Bill From is Mumbai then the Supplier PO will be Billed To Mumbai.
                  </li>
                </ul>
              </li>
              <li>
                Regular
                <ul>
                  <li>If the Ship To Address is Mumbai then the Supplier PO will be billed to Mumbai.</li>
                </ul>
              </li>
              <li>
                Supplier is from a Location where BulkMRO does not have an office.
                <ul>
                  <li>
                    If the Supplier is from Kolkata where the BulkMRO does not have an office. The Supplier PO will be
                    Billed TO where the Sales Order is being Billed From.s
                  </li>
                </ul>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-12 col-md-6">
    <div class="d-flex flex-row align-items-end">
      <div class="flex-grow-1">
        <%= f.input :attachments, wrapper: :custom_file, input_html: {multiple: true}, label: 'Attachments' %>
      </div>

      <% if f.object.persisted? %>
        <div class="form-group">
          <% f.object.attachments.each do |attachment| %>
            <%= link_to url_for(attachment), class: 'ml-md-1 btn btn-success', target: '_blank', :"data-toggle" => 'tooltip', :status => attachment.filename do %>
              <i class="fal fa-download"></i>
              <%= link_to overseers_attachment_path(attachment.id), class: 'btn btn-outline-danger btn-sm ml-1 mr-1 mr-md-0', method: :delete, data: {confirm: 'Are you sure?'}, :"data-toggle" => 'tooltip', :status => ['Delete', ' ', attachment.filename, '?'].join('') do %>
                <i class="fal fa-trash-alt"></i>
              <% end if attachment.present? && is_authorized(:attachment, 'destroy') %>
            <% end %>
          <% end if f.object.attachments.attached? %>
        </div>
      <% end %>
    </div>
  </div>
  <% if f.object.persisted? %>
    <div class="col-12  col-md-6">
      <%= f.nested_fields_for :comments, f.object.comments.build(:overseer => current_overseer) do |po_request_comment| %>
        <%= po_request_comment.hidden_field :created_by_id %>
        <%= po_request_comment.hidden_field :updated_by_id %>
        <%= po_request_comment.input :message, :placeholder => 'Type message', input_html: {:'data-parsely-no-valid-feedback' => ''}, label: 'Comment Message' %>
      <% end %>
    </div>
  <% end %>
</div>
<hr>
<div class="form-row ml-1">
  <div class="col-12 col-md-2 mt-4 custom-control custom-checkbox">
    <input type="checkbox" class="custom-control-input" name="all_lead_dates" id="all_lead_dates">
    <label class="custom-control-label" for="all_lead_dates">Select All</label>
  </div>
  <div class="col-12 col-md-4 update_lead_date_wrapper">
    <%= f.input :common_lead_date, as: :string, input_html: {:'data-toggle' => 'datepicker', :class => 'overall-lead-time'}, label: 'Lead Date' %>
  </div>
  <div class="col-12 col-md-6 mt-3">
    <button type="button" id="update_lead_date" class=" btn btn-warning btn-rounded align-self-center btn-block-sm-down ml-1 mb-md-0 mb-1 update_lead_date_wrapper">
      <i class="fal fa-plus mr-1"></i>Update Lead Date
    </button>
  </div>
</div>
<hr>

<%= f.nested_fields_for :rows, f.object.persisted? ? f.object.rows.order(id: :asc) : f.object.rows do |po_request_row| %>
  <%= po_request_row.hidden_field :id %>
  <%= po_request_row.hidden_field :sales_order_row_id %>
  <%= po_request_row.hidden_field :product_id %>
  <%= po_request_row.hidden_field :tax_code_id %>
  <%= po_request_row.hidden_field :tax_rate_id %>
  <%= po_request_row.hidden_field :measurement_unit_id, value: po_request_row.object.measurement_unit_id || MeasurementUnit.default.id %>
  <div class="form-row po-request-row">
    <div class="col-12 col-md-12 mb-1 ml-2">
      <span class="custom-control custom-checkbox d-inline pl-0">
        <%= check_box_tag 'po_request_row[]', po_request_row.object.id, false, id: "po_request_row_id_#{po_request_row.object.id}", class: 'custom-control-input' %>
        <label class="custom-control-label" for="<%= "po_request_row_id_#{po_request_row.object.id}" %>"></label>
      </span>
      #<%= ((f.object.rows.index(po_request_row.object) || f.object.rows.size || 0) + 1) %> <strong class="mb-4"><%= po_request_row.object.to_s %></strong>
      <%#= po_request_row.input :sr, input_html: {value: ((f.object.rows.index(po_request_row.object) || 0) + 1)}, disabled: true %>
    </div>
    <div class="col-12 col-md-12 mb-1 ml-2">
      <%= link_to  product_resync_inventory_overseers_po_requests_path(product_id: po_request_row.object.product_id), 'data-toggle': 'tooltip', 'data-placement': 'top', 'data-toggle': 'modal', 'data-product-id': po_request_row.object.product_id, 'data-warehouse-id': po_request_row.object.product_id, title: 'Show Inventory', class: 'btn btn-sm btn-outline-dark product-stock-inventory' do %>
        <% concat content_tag(:span, '') %>
        <% concat content_tag :i, nil, class: 'fal fa-inventory' %>
      <% end %>
    </div>
    <div class="col-12 col-md-12">
      <div class="form-row">

        <div class="col-12 col-md-3">
          <div class="select2-wrap">
            <%= po_request_row.association :product, label_method: :to_s, collection: selected_option_or_nil(po_request_row, :product), include_blank: "Type SKU number, name, or brand", input_html: {class: 'select2-ajax select2-wrap-text', :'data-source' => product_path, :'data-parsley-errors-messages-disabled' => '', :'data-parsely-no-valid-feedback' => ''}, disabled: po_request_row.object.field_disabled? %>
          </div>
        </div>

        <div class="col-12 col-md-2">
          <%= po_request_row.input :brand, input_html: {value: po_request_row.object.product.try(:brand).to_s}, label: 'Make', disabled: true %>
        </div>
        <div class="col-12 col-md-2">
          <% if !stock %>
            <%= po_request_row.association :tax_code, label_method: :to_s, collection: selected_option_or_nil(po_request_row, :tax_code), include_blank: "Type to search", input_html: {class: 'select2-ajax select2-wrap-text', :'data-source' => autocomplete_overseers_tax_codes_path(is_service: !po_request_row.object.field_disabled?)}, label: 'HSN', required: true %>
          <% else %>
            <%= po_request_row.association :tax_code, label_method: :to_s, collection: selected_option_or_nil(po_request_row, :tax_code), include_blank: "Type to search", input_html: { class: 'select2-ajax select2-wrap-text', :'data-source' => autocomplete_overseers_tax_codes_path }, label: 'HSN', required: true %>
          <% end %>
        </div>
        <div class="col-12 col-md-2">
          <%= po_request_row.association :tax_rate, collection: TaxRate.all, label_method: :to_s, include_blank: false, label: 'Tax Rate' %>
        </div>
        <div class="col-12 col-md-1">
          <%= po_request_row.input :quantity, input_html: {value: po_request_row.object.quantity, max: po_request_row.object.try(:sales_order_row).try(:quantity), min: 0.01}, disabled: false, required: true %>
        </div>

        <div class="col-12 col-md-1">
          <%= po_request_row.input :measurement_unit, value: po_request_row.object.measurement_unit || MeasurementUnit.default.name, disabled: true %>
        </div>
      </div>
    </div>
    <div class="col-12 col-md-12">
      <div class="form-row">
        <div class="col-12 col-md-2">
          <%= po_request_row.input :unit_price, input_html: {value: po_request_row.object.unit_price || po_request_row.object.unit_price_per_quantity.round(2)}, disabled: false, required: true %>
        </div>
        <div class="col-12 col-md-1">
          <%= po_request_row.input :discount_percentage, input_html: {value: po_request_row.object.discount_percentage || 0}, label: 'Disc. %', disabled: false %>
        </div>

        <div class="col-12 col-md-2">
          <%= po_request_row.input :converted_total_selling_price, input_html: {value: po_request_row.object.converted_total_selling_price}, disabled: true, label: 'Total Selling Price' %>
        </div>
        <div class="col-12 col-md-2">
          <%= po_request_row.input :converted_total_tax, input_html: {value: po_request_row.object.converted_total_tax}, disabled: true, label: 'Total Tax' %>
        </div>
        <div class="col-12 col-md-2">
          <%= po_request_row.input :converted_total_selling_price_with_tax, input_html: {value: po_request_row.object.converted_total_selling_price_with_tax}, disabled: true, label: 'Total Selling Price with Tax' %>
        </div>

        <div class="col-12 col-md-2">
          <%= po_request_row.input :lead_time, as: :string, input_html: {:'data-toggle' => 'datepicker', :'data-customer-committed-date' => !stock ? f.object.sales_order.customer_committed_date : '', :class => 'lead-time'}, label: 'Lead Date', required: true %>
        </div>
        <% if stock || (f.object.rows.present? && f.object.rows.length > 1) %>
          <div class="col-12 col-md-1">
            <%= po_request_row.remove_nested_fields_link(class: 'btn btn-danger form-group align-self-center flex-grow-1 mt-3 ml-2') do %>
              Remove
            <% end if is_authorized(:po_request_row, 'destroy') %>
          </div>
        <% end %>
      </div>
    </div>
    <hr class="divider">
  </div>
<% end %>

<%# if is_authorized(:po_request, 'add_service_product') %>
<% if !stock %>
  <div class="col-md-3">
    <%= f.add_nested_fields_link :rows, class: 'btn btn-outline-success btn-block mb-2 mb-md-0' do %>
      <i class="fal fa-plus-circle mr-1"></i>Add a Service product
    <% end %>
  </div>
<% end %>